// Find the n’th term in Look-and-say (Or Count and Say) Sequence. The
// look-and-say sequence is the sequence of below integers: 1, 11, 21, 1211,
// 111221, 312211, 13112221, 1113213211, … How is above sequence generated? n’th
// term in generated by reading (n-1)’th term. The first term is "1" Second term
// is "11", generated by reading first term as "One 1" (There is one 1 in
// previous term) Third term is "21", generated by reading second term as "Two
// 1" Fourth term is "1211", generated by reading third term as "One 2 One 1"
// and so on
// How to find n’th term?

// Example 1:
// Input: n = 3
// Output: 21

// Example 2:
// Input: n = 5
// Output: 111221

#include <string>
using namespace std;

class Solution {
 public:
  string countAndSay(int n) {
    if (n == 1) {
      return "1";
    }
    string prev = countAndSay(n - 1);
    int index = 0;
    string result = "";
    while (index < prev.size()) {
      int dup = 1;
      while (index < prev.size() - 1 && prev[index] == prev[index + 1]) {
        dup++;
        index++;
      }
      result += to_string(dup) + prev[index];
      index++;
    }
    return result;
  }
};